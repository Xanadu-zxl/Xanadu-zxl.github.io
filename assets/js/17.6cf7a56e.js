(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{223:function(s,n,a){"use strict";a.r(n);var t=a(28),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("哈~还需要学习\n")]),s._v(" "),a("h2",{attrs:{id:"箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[s._v("#")]),s._v(" 箭头函数")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN箭头函数"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("箭头函数表达式")]),s._v("的语法比函数表达式更短，并且没有自己的this，arguments，super或 new.target。这些函数表达式更适用于那些本来需要匿名函数的地方，并且它们不能用作构造函数。")]),s._v(" "),a("p",[s._v("语法:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("(参数1,参数2,..,参数n) =>{函数声明}\n(参数1, 参数2, …, 参数N) => 表达式（单一）\n//相当于：(参数1, 参数2, …, 参数N) =>{ return 表达式; }\n\n// 当只有一个参数时，圆括号是可选的：\n(单一参数) => {函数声明}\n单一参数 => {函数声明}\n\n// 没有参数的函数应该写成一对圆括号。\n() => {函数声明}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//加括号的函数体返回对象字面表达式：\n参数=> ({foo: bar})\n\n//支持剩余参数和默认参数\n(参数1, 参数2, ...rest) => {函数声明}\n(参数1 = 默认值1,参数2, …, 参数N = 默认值N) => {函数声明}\n\n//同样支持参数列表解构\nlet f = ([a, b] = [1, 2], {x: c} = {x: a + b}) => a + b + c;\nf();  // 6\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[a("strong",[s._v("引入箭头函数有两个方面的作用：")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("更简短的函数并且不绑定this\n"),a("strong",[s._v("通过 call 或 apply 调用")])])]),s._v(" "),a("li",[a("p",[s._v("箭头函数没有自己的this指针，通过 call() 或 apply() 方法调用一个函数时，只能传递参数（不能绑定this---译者注）")])]),s._v(" "),a("li",[a("p",[s._v("他们的第一个参数会被忽略。（这种现象对于bind方法同样成立---译者注\n"),a("strong",[s._v("不绑定arguments")])])]),s._v(" "),a("li",[a("p",[s._v("箭头函数不绑定Arguments 对象。因此，在本示例中，arguments只是引用了封闭作用域内的arguments：")]),s._v(" "),a("p",[s._v("var arguments = [1, 2, 3];\nvar arr = () => arguments[0];")]),s._v(" "),a("p",[s._v("arr(); // 1")]),s._v(" "),a("p",[s._v("function foo(n) {\nvar f = () => arguments[0] + n; // 隐式绑定 foo 函数的 arguments 对象. arguments[0] 是 n\nreturn f();\n}")]),s._v(" "),a("p",[s._v("foo(1); // 2")])]),s._v(" "),a("li",[a("p",[s._v("箭头函数不能用作构造器，和 new一起用会抛出错误。")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var Foo = () => {};\nvar foo = new Foo(); // TypeError: Foo is not a constructor\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("箭头函数没有prototype属性。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var Foo = () => {};\nconsole.log(Foo.prototype); // undefined\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("箭头函数可以有一个“简写体”或常见的“块体”。")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在一个简写体中，只需要一个表达式，并附加一个隐式的返回值。在块体中，必须使用明确的return语句。")]),s._v(" "),a("p",[s._v("var func = x => x * x;"),a("br"),s._v("\n// 简写函数 省略return")]),s._v(" "),a("p",[s._v("var func = (x, y) => { return x + y; };\n//常规编写 明确的返回值")])])]),s._v(" "),a("p",[a("strong",[s._v("箭头函数在参数和箭头之间不能换行。")])]),s._v(" "),a("div",{staticClass:"language-coffeescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-coffeescript"}},[a("code",[s._v("    var "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n               "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("SyntaxError")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" expected expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" got "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=>'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{217:function(t,s,a){"use strict";a.r(s);var e=a(28),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("正则表达式!\n")]),t._v(" "),a("h2",{attrs:{id:"创建方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建方式"}},[t._v("#")]),t._v(" 创建方式")]),t._v(" "),a("ul",[a("li",[t._v("一种是字面量，格式是写在/ /中，字面量 /js/")]),t._v(" "),a("li",[t._v("另一种是用构造方法，里面写字符串或者是字符串的变量 "),a("code",[t._v("构造函数new RegExp()")])]),t._v(" "),a("li",[t._v("匹配字符串的值,区别一方便,二则可以传递变量;")]),t._v(" "),a("li",[t._v("普通字符: 字母、数字、下划线(_)、汉字、空格以及其他一些没有特殊含义的字符(!@,;等)")]),t._v(" "),a("li",[t._v("特殊字符: .")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i love js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/js/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"匹配方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配方法"}},[t._v("#")]),t._v(" 匹配方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("test "),a("code",[t._v("pattern.test(str)")]),t._v("用正则去匹配相应字符串,匹配成功返回ture")])]),t._v(" "),a("li",[a("p",[t._v("exec "),a("code",[t._v("pattern.exec(str)")]),t._v("找到匹配的字符串就添加数组中,返回数组 找不到返回null;")])]),t._v(" "),a("li",[a("p",[t._v("exec会匹配两个属性：")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("index")]),t._v("\t匹配的值在数组中的位置")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("input")]),t._v("\t匹配的字符串的位置")])])]),t._v(" "),a("h3",{attrs:{id:"模式修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式修饰符"}},[t._v("#")]),t._v(" 模式修饰符")]),t._v(" "),a("ul",[a("li",[t._v("i ignoreCase 不区分大小写"),a("code",[t._v("/js/i")])]),t._v(" "),a("li",[a("code",[t._v("var pattern = new RegExp('js','i')")]),t._v(";")]),t._v(" "),a("li",[t._v("g global 全局匹配，修饰符g，匹配所有元素，如有多个匹配时，返回数组"),a("code",[t._v("/js/ig")])]),t._v(" "),a("li",[t._v("m multiline 多行匹配"),a("code",[t._v("/hss/igm")])]),t._v(" "),a("li",[t._v("写在右斜杠后面")])]),t._v(" "),a("h2",{attrs:{id:"字符匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符匹配"}},[t._v("#")]),t._v(" 字符匹配")]),t._v(" "),a("h3",{attrs:{id:"转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[t._v("#")]),t._v(" 转义字符")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("\\")])]),t._v(" "),a("li",[a("code",[t._v("\\n,\\x0A,/\\u000A/")]),t._v("\t换行")]),t._v(" "),a("li",[a("code",[t._v("\\t")]),t._v("\t制表符\tTab")]),t._v(" "),a("li",[t._v("中文的编码:"),a("code",[t._v("\\4e00--\\u9fa5")])])]),t._v(" "),a("h3",{attrs:{id:"字符类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符类"}},[t._v("#")]),t._v(" 字符类")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/[js]/")]),t._v("\t\t只要一个")]),t._v(" "),a("li",[a("code",[t._v("/[^js]/")]),t._v("\t\t取反，除了js都可以匹配")]),t._v(" "),a("li",[a("code",[t._v("/[a-z]/")]),t._v("\t\t匹配a到z，前面的小于等于后面的")]),t._v(" "),a("li",[a("code",[t._v("/[a-zA-Z]/")]),t._v("\t所有字母")]),t._v(" "),a("li",[a("code",[t._v("/[0-9]/")]),t._v("\t\t匹配数字")]),t._v(" "),a("li",[a("code",[t._v("/^\\n/ === /. /")])]),t._v(" "),a("li",[a("code",[t._v("/[a-zA-Z0-9_]/")]),t._v("和"),a("code",[t._v("/\\w/")]),t._v("\t小写w：包括下划线的任何单词字符，类似但不等价于“[A-Za-z0-9_]”")]),t._v(" "),a("li",[a("code",[t._v("/[^a-zA-Z0-9_]/")]),t._v("和"),a("code",[t._v("/\\W/")]),t._v("\t大写W、")]),t._v(" "),a("li",[a("code",[t._v("/[0-9]/")]),t._v(" == "),a("code",[t._v("/\\d/")]),t._v("\t\t数字")]),t._v(" "),a("li",[a("code",[t._v("\\D")]),t._v("\t除了数字")]),t._v(" "),a("li",[a("code",[t._v("\\s")]),t._v("\t匹配空格和制表符(\ttab)")]),t._v(" "),a("li",[a("code",[t._v("\\S")]),t._v("\t除了匹配空格和制表符(\ttab)")]),t._v(" "),a("li",[a("code",[t._v(".（点）")]),t._v("匹配除"),a("code",[t._v("\\n换行")]),t._v("和"),a("code",[t._v("\\r回车")]),t._v("之外的任何单个字符。")])]),t._v(" "),a("h3",{attrs:{id:"量词重复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词重复"}},[t._v("#")]),t._v(" 量词重复")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("{n}")]),t._v(" 匹配n次")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("{1,2}")]),t._v(" 一个或者两个，不能有空格")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("{1，}")]),t._v("至少一个")])]),t._v(" "),a("li",[a("p",[t._v("只能没有上限，不能没有下限")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("?")]),t._v("\t零次或者一次")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("+")]),t._v("\t大于等于一次")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("*")]),t._v("\t大于等于零次")])]),t._v(" "),a("li",[a("p",[t._v("量词只对紧靠的前一个有效")])]),t._v(" "),a("li",[a("p",[t._v("正整数"),a("code",[t._v("/[1-9]\\d{0,}/")]),t._v("或者"),a("code",[t._v("/[1-9]\\d*/")])])]),t._v(" "),a("li",[a("p",[t._v("正整数和负整数的正则："),a("code",[t._v("/-？[1-9]\\d{0,}/")]),t._v("或者"),a("code",[t._v("/-{0,1}[1-9]\\d*/")]),t._v("或者"),a("code",[t._v("/-？[1-9]\\d*/")]),t._v("或者"),a("code",[t._v("/-{0,1}[1-9]\\d{0,1}/")])])])]),t._v(" "),a("h3",{attrs:{id:"非贪婪的重复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非贪婪的重复"}},[t._v("#")]),t._v(" 非贪婪的重复")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("默认匹配多")])]),t._v(" "),a("li",[a("p",[t._v("量词后加"),a("code",[t._v("?")]),t._v("\t非贪婪匹配模式")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("/a+?")]),t._v("\t多个a也只匹配一个a")])]),t._v(" "),a("li",[a("p",[t._v("贪婪与非贪婪的概念只有当你使用量词的时候才有意义。")])]),t._v(" "),a("li",[a("p",[t._v("正则表达式的模式匹配总是会寻找字符串中第一个可能匹配的位置。")])]),t._v(" "),a("li",[a("p",[t._v("要想将贪婪转换成非贪婪匹配，只需在量词后面加上?")])])]),t._v(" "),a("h3",{attrs:{id:"选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[t._v("#")]),t._v(" 选择")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/|/")]),t._v(" 类似于或")]),t._v(" "),a("li",[a("code",[t._v("/html|css|js/")]),t._v("\t从最左侧开始匹配")]),t._v(" "),a("li",[t._v("匹配整数\t"),a("code",[t._v("/0|-?[1-9]\\d*/")])]),t._v(" "),a("li",[t._v("在匹配的时候，会在"),a("code",[t._v("字符串")]),t._v("中从前往后一 一的匹配")])]),t._v(" "),a("h3",{attrs:{id:"分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[t._v("#")]),t._v(" 分组")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("()")]),t._v(" 分组、")]),t._v(" "),a("li",[a("code",[t._v("/(ab)+/")]),t._v("\t\t多次匹配ab、")]),t._v(" "),a("li",[a("code",[t._v("/(ab)c/")]),t._v("\t\t可单独捕获")]),t._v(" "),a("li",[a("code",[t._v("/?:(ab)c/")]),t._v("\t非捕获")]),t._v(" "),a("li",[a("code",[t._v("/(ab) cd \\1/")]),t._v(" 可匹配第一个分组")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div> <a>午饭加个鸡蛋呀</a> </div>'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" patten "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<([a-zA-Z]+)>(.*?)<\\/\\1>/")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"匹配位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配位置"}},[t._v("#")]),t._v(" 匹配位置")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/^js/")]),t._v("\t\t匹配开头")]),t._v(" "),a("li",[a("code",[t._v("/js$/")]),t._v("\t\t末尾匹配")]),t._v(" "),a("li",[a("code",[t._v("/^\\d+$/")]),t._v("\t\t全是数字")])]),t._v(" "),a("h3",{attrs:{id:"单词边界匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单词边界匹配"}},[t._v("#")]),t._v(" 单词边界匹配")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("\\b")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("/java(?=script)/")]),t._v("\t前瞻性匹配，只有后面跟的值相同才会匹配")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("/java(?!script)")]),t._v("\t\t负前瞻性匹配，后面跟的值不一样就可以匹配")])])]),t._v(" "),a("h2",{attrs:{id:"regexp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp"}},[t._v("#")]),t._v(" RegExp")]),t._v(" "),a("ul",[a("li",[t._v("/js/")]),t._v(" "),a("li",[t._v("new RegExp('js')")])]),t._v(" "),a("h3",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),a("ul",[a("li",[t._v("exec\t属性·input\t·index")])]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = 'js js js'\nvar pattern = /js/g;\n//全局匹配\n\nconsole.log(patten.exec(str));\nconsole.log(patten.exec(str));\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("toString")]),t._v("\t\t对象转化为字符串,正则的字面量形式")]),t._v(" "),a("li",[a("code",[t._v("toLocaleString")]),t._v("\t本地特色的字符串")]),t._v(" "),a("li",[a("code",[t._v("valueOf")]),t._v("\t\t\t返回正则本身")])]),t._v(" "),a("h3",{attrs:{id:"实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = 'js js js'\nvar pattern = /js/g;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[a("p",[a("code",[t._v("pattern.ignoreCase")]),t._v("\t\t判断有没有i\t忽略大小写")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("pattern.global")]),t._v("\t\t\t判断有没有g\t全局匹配")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("pattern.multiline")]),t._v("\t\t判断有没有m\t多行匹配")])]),t._v(" "),a("li",[a("p",[t._v("都返回布尔值、、")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("source")]),t._v("\t返回字面量形式对应的字符串")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("lastIndex")]),t._v("\t全局匹配才会工作，·"),a("code",[t._v("lastIndex")]),t._v("起始的匹配位置匹配成功自动后移，匹配到"),a("code",[t._v("null")]),t._v("自动重置，重头开始")])])]),t._v(" "),a("h3",{attrs:{id:"构造函数属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数属性"}},[t._v("#")]),t._v(" 构造函数属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("RegExp.input")]),t._v("\t\t\t匹配的字符串\t\t\t(RegExp['$_']")]),t._v(" "),a("li",[a("code",[t._v("RegExp.lastMatch")]),t._v("\t\t最近匹配的\t\t\t(简写RegExp['$&'])")]),t._v(" "),a("li",[a("code",[t._v("RegExp.leftCotext")]),t._v("\t\t上一次匹配的左\t\t(RegExp['$`'])")]),t._v(" "),a("li",[a("code",[t._v("RegExp.RightCotext")]),t._v('\t\t上一次匹配的右\t\t(RegExp["$\'"])')]),t._v(" "),a("li",[a("code",[t._v("RegExp.lastParen")]),t._v("\t\t上一次匹配的子选项\t(RegExp['$+'])")]),t._v(" "),a("li",[a("code",[t._v("$1")]),t._v("\t\t分组是构造函数的属性"),a("code",[t._v("$1")]),t._v("来引用")])]),t._v(" "),a("h3",{attrs:{id:"string中与正则有关的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string中与正则有关的方法"}},[t._v("#")]),t._v(" String中与正则有关的方法")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = 'html js'\nvar pattern = /js2/\n\nconsole.log(str.search(pattern));\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("search")]),t._v("\t\t搜寻正则找到的位置，找不到返回-1；与全局无关")]),t._v(" "),a("li",[a("code",[t._v("match")]),t._v("\t\t匹配不到返回null，匹配到返回一个数组；有分组第二个为分组元素，全局匹配全都显示，但是不显示分组内容")]),t._v(" "),a("li",[a("code",[t._v("exec")]),t._v("\t\t无论是否全局匹配的都会返回分组中匹配到的内容，都只返回当前匹配的一个内容，而不是全部返回。")]),t._v(" "),a("li",[a("code",[t._v("·$·")]),t._v("\t\t\t尾匹配和"),a("code",[t._v("^")]),t._v("首匹配\t\t"),a("code",[t._v("match+m")]),t._v("\t多行匹配；")]),t._v(" "),a("li",[a("code",[t._v("split")]),t._v("\t\t替换结合正则"),a("code",[t._v("str.split(pattern)")]),t._v(" "),a("code",[t._v("pattern = /\\s*,\\s*/")])]),t._v(" "),a("li",[a("code",[t._v("replace")]),t._v("\t\t替换"),a("code",[t._v("(str.replace('js','html'))")]),t._v("，可将字符串js直接替换为html；全局匹配就会全局替换")])]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = '111-111-111'\nvar pattern = /-/g\n\nconsole.log(str.replace(pattern,'.'))\t\t//111.111.111\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("replace引用"),a("code",[t._v("（js）")]),t._v("的方式为"),a("code",[t._v("$1")])])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("console.log(str.replace(pattern,function ($0){\n\tvar result = '';\n\tfor(var i = 0; $0.length; i++){\n\t\tresult += '*';\n\t}\n\treturn result;\n}))\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"实际案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际案例"}},[t._v("#")]),t._v(" 实际案例")]),t._v(" "),a("h3",{attrs:{id:"qq昵称和密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#qq昵称和密码"}},[t._v("#")]),t._v(" QQ昵称和密码")]),t._v(" "),a("ul",[a("li",[t._v("账号\t\t全是数字，首位不为0，最少5位\t"),a("code",[t._v("/^[1-9]\\d{4,}$/")])]),t._v(" "),a("li",[t._v("昵称\t\t中，英文，数字及下划线，2-18  位\t"),a("code",[t._v("/^[\\u4e00-u9fa5a-zA-Z0-9_]{2,18}$/")]),t._v("\t简化："),a("code",[t._v("/^[\\u4e00-u9fa5a\\w]{2,18}$/")])]),t._v(" "),a("li",[t._v("密码\t\t6-16位，区分大小写，不能用空白字符\\s\t\t"),a("code",[t._v("/^\\S{6-16}$/")])])]),t._v(" "),a("h3",{attrs:{id:"去除字符串首位空白字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除字符串首位空白字符"}},[t._v("#")]),t._v(" 去除字符串首位空白字符")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = '\t\tAlex\t';\nvar pattern = /^\\s+|\\s+$/\n// var pattern1 = /^\\s+/\n// var pattern2 = /\\s+$/\n\nconsole.log('|'+str.replace(pattern,'')+'|')\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("可以修改为：")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function trim(str) {\n\treturn str.replace(/^\\s+/,'').replace(/\\s+$/,'')\n}\nvar str = '\t\tAlex\t';\ntrim(str)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"转驼峰"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转驼峰"}},[t._v("#")]),t._v(" 转驼峰-")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var str = background-color;\nvar pattern = /-([a-z])/gi;\nconsole.log(str.replace(pattern,function (all,letter) {\n\treturn letter.toUpperCase()\n}))\n\nfunction toCameCase(str) {\n\treturn letter.toUpperCase()\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"匹配html标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配html标签"}},[t._v("#")]),t._v(" 匹配HTML标签")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//正向思考\nvar str = \'<p class = "odd" id = "odd"> 123 </p>\'\nvar pattern = /<\\/?[a-zA-Z]+(\\s+[a-zA-Z]+=".*")>/g\nconsole.log(str.match(pattern))\n\n// 逆向思考\nvar pattern = /<[^>]+>/g;\n\nvar pattern = /<(?:[^"\'>]|"[^"]*"|\'[^\']*\')*>/g\n//改良\nvar pattern = /<(?:[^"\'>]|([^"\'])|\'[^"\']*\'\\1)*>/g\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#邮箱"}},[t._v("#")]),t._v(" 邮箱")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/(\\w+\\.)*(\\w+)@(\\w+\\.)+([a-z])/i;\n/(?:\\w+\\.)*\\w+@(?:\\w+\\.)+[a-z]/i;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"url地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url地址"}},[t._v("#")]),t._v(" URL地址")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 协议:\\/\\/主机名(:端口号)/(路径))\n\n// 简化版\nvar pattern = /^(https?:\\/\\/)?([^:\\/]+)(:\\d+)?(\\/.*)?$/\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#汇总"}},[t._v("#")]),t._v(" 汇总")]),t._v(" "),a("div",{staticClass:"language-es6 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var regexp = {\n\t'chinese': /[\\u4e00-\\u9fa5]/,\n\t'qq':/^[1-9]\\d{4,}$/\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);
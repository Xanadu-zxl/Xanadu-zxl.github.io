(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{239:function(t,e,s){"use strict";s.r(e);var a=s(28),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("算法第一步~\n")]),t._v(" "),s("h2",{attrs:{id:"栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),s("h3",{attrs:{id:"栈的放法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈的放法"}},[t._v("#")]),t._v(" 栈的放法")]),t._v(" "),s("ul",[s("li",[t._v("push(element(s)): 添加一个或几个新元素到栈顶")]),t._v(" "),s("li",[t._v("pop: 移除栈顶元素,同时返回被移除的元素")]),t._v(" "),s("li",[t._v("peek: 返回栈顶元素,不对栈做任何处理")]),t._v(" "),s("li",[t._v("isEmpty: 栈里没有任何元素返回true,否则false")]),t._v(" "),s("li",[t._v("size: 返回栈的元素个数,相当于length")]),t._v(" "),s("li",[t._v("clear: 移除栈里的所有元素")])])])}),[],!1,null,null,null);e.default=l.exports}}]);